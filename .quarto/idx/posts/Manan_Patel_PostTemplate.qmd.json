{"title":"Layoffs dataset","markdown":{"yaml":{"title":"Layoffs dataset","author":"Manan Patel","desription":"Analyzed on layoffs in US and in other countries","date":"12/18/2022","format":{"html":{"toc":true,"code-fold":true,"code-copy":true,"code-tools":true}},"categories":["hw1","challenge1","my name","dataset","ggplot2"]},"headingText":"| label: setup","containsRefs":false,"markdown":"\n\n```{r}\n#| warning: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(stats)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# **Introduction**-\n\nLayoffs or the termination of employment for a large number of workers and have become increasingly common in recent years especially since the COVID-19 pandemic started. Layoffs are typically counted when more than 50 employees are let go from a company for a period of at least 31 days. The occurrence of layoffs can cause anxiety and paranoia among remaining employees, especially if they are struggling to meet their performance goals or arrive to work on time. According to recent statistics, a total of 17 million layoffs have been reported in the United States. Many data has been collected and analyzed on layoffs in the US, including trends, demographics, and industry-specific information. We will examined the details of these statistics in order to provide a thorough understanding of the layoff situation in USA and rest of the world.\n\nNevertheless, tech companies around the world are struggling to deal with the economic downturn. A combination of factors such as reduced consumer spending, increased interest rates from central banks, and a strong US dollar has raised concerns about the possibility of a recession. In response to these challenges, some tech firms have started laying off employees. For example, Meta recently laid off 13% of its workforce, which is over 11,000 people. This data set was created in an effort to allow the Kaggle community to analyze the current challenges facing the tech industry and potentially uncover useful insights.\n\n## Research Questions-\n\n1.  A list of the top 10 companies that have laid off employees.\n\n2.  The top 3 companies that have laid off employees on a yearly basis.\n\n3.  The top 3 locations where the most layoffs have occurred on a yearly basis.\n\n4.  A list of the top 20 companies that have laid off a specific percentage of their employees.\n\n5.  The top 10 countries where the most layoffs have occurred.\n\n6.  The top 10 locations in the United States where the most layoffs have occurred.\n\n7.  The locations in India where the most layoffs have occurred.\n\n8.  The relationship between funds received and layoffs.\n\n9.  The stage of a company's development at which the most layoffs have occurred.\n\n10. The industry that has experienced the most layoffs.\n\n11. The total number of layoffs on a yearly basis.\n\n12. The number of layoffs that have occurred on a yearly basis according to country.\n\nWe will try our best to answer each on of the questions mentioned above, let's get started-\n\n# **Data-**\n\n## **Reading the dataset-**\n\n```{r}\n# data frame\ndf <- read.csv(\"_data/layoffs.csv\")\nhead(df)\n```\n\n## **Data Description-**\n\n1.  company - This column refers to the name of the company that has experienced a layoff.\n\n2.  location - This column refers to the location of the layoff, which could be a city, state, or region.\n\n3.  industry - This column refers to the industry in which the company operates, such as tech, healthcare, or finance.\n\n4.  total_laid_off - This column refers to the total number of employees who were laid off by the company.\n\n5.  percentage_laid_off - This column refers to the percentage of the company's workforce that was laid off.\n\n6.  date - This column refers to the date on which the layoff occurred.\n\n7.  stage - This column refers to the stage of funding that the company was in at the time of the layoff. This could be early-stage, late-stage, or publicly traded.\n\n8.  country - This column refers to the name of the country in which the company is located.\n\n9.  funds_raised - This column refers to the amount of funds that the company had raised, in millions of dollars, prior to the layoff. This information could be relevant in understanding the financial situation of the company at the time of the layoff.\n\nLet's have a look on the last few rows-\n\n```{r}\n# Get the last six rows of df\ntail(df)\n```\n\nGet the class of each column in df-\n\n```{r}\n# sapply will get the class of each column\nsapply(df, class)\n```\n\n## **Checking for all possible NA and cleaning up the datasets-**\n\n```{r}\n# Use sapply to apply a lambda function to each column in the df data frame\nmissing_counts <- sapply(df, function(x) {\n  # Within the lambda function, we will use the sum and is.na functions to count the number of missing values in x\n  sum(is.na(x))\n})\n# then finally we will print the resulting vector of missing value counts\nmissing_counts\n```\n\n```{r}\n# Use the drop_na function to remove rows with missing values from the df\ndf <- df %>% drop_na()\n# Using sapply to apply a lambda function to each column in the df\nmissing_counts <- sapply(df, function(x) {\n# Within the lambda function, use the sum and is.na functions to count the number of missing values in x\n  sum(is.na(x))\n})\n# then finally we will print the resulting vector of missing value counts\nmissing_counts\n```\n\nLet's convert character columns to factor columns in df-\n\n```{r}\n# converting character to factor\ndf <- df %>% mutate_if(is.character,as.factor)\nglimpse(df)\n```\n\nNow we will count the number of unique values in the company column of df-\n\n```{r}\n#counting the number of unique values\nn_distinct(df$company)\n```\n\n```{r}\n# Convert the date column to a year column and a month column\ndf$yrs <- strftime(df$date,'%Y') %>% as.factor()  # extract year from date and convert to a factor\ndf$mnt <- strftime(df$date,'%m') %>% as.factor()  # extract month from date and convert to a factor\n```\n\nNow let's see the mean, median, and standard deviation of total_laid_off.\n\n```{r}\n#mean will calculates the average  \nmean(df$total_laid_off)\n#median will calculates the median\nmedian(df$total_laid_off)\n#sd will calculates the standard deviation\nsd(df$total_laid_off)\n```\n\nSetup figure size-\n\n```{r}\nfig <- function(width, height) {\n  # Set the width and height options for the plot\n  options(repr.plot.width = width, repr.plot.height = height)\n}\n# Call it\nfig(20, 10)\n```\n\n```{r}\n# Get the number of unique values in the location\nprint(length(unique(df$location)))\n\n# Get the unique values in the location\nunique(df$location)\n\n```\n\n```{r}\n# Get the number of unique values in the industry\nprint(length(unique(df$industry)))\n\n# Get the unique values in the industry\nunique(df$industry)\n```\n\n```{r}\n# Get the unique values in the stage\nunique(df$stage)\n```\n\n```{r}\n# Total how many unique countries are there in the dataset\nunique(df$country)\n```\n\n```{r}\n# Total how many unique companies are there in the dataset\nlength(unique(df$company))\n```\n\n```{r}\n# Convert the 'date' column to a date data type\ndf$date <- as.Date(df$date)\n\n# Extract the month and year from the 'date' column\ndf$month <- month(df$date)\ndf$year <- year(df$date)\n\n```\n\n```{r}\n# Select rows that are duplicates\nduplicate_rows <- df[duplicated(df),]\n\n# Remove duplicate rows from the data frame\ndf <- df[!duplicated(df),]\n\n```\n\n```{r}\ncolSums(is.na(df))\n```\n\n```{r}\nsummary(df)\n```\n\n```{r}\n#creating a subset of df by filtering for rows where percentage_laid_off = 1\nsubset(df, percentage_laid_off == 1)\n```\n\n```{r}\nhead(df, 2)\ncolSums(is.na(df))\n```\n\n```{r}\ndim(df)\n```\n\n```{r}\n# subset the data by selecting rows where company = Lyft\ndf[df$company == \"Lyft\", ]\n```\n\nThis will show all the company names which are their multiple times.\n\nNow, we will check the data, we will do more cleaning and re-factoring.\n\n```{r}\nhead(df, n = 2)\ncolSums(is.na(df))\n```\n\n```{r}\ndf <- df %>% drop_na()\ndf %>% sapply(function(x)sum(is.na(x)))\n```\n\n```{r}\ndf <- df %>% mutate_if(is.character,as.factor)\nglimpse(df)\n```\n\n```{r}\ntable(df$year)\n```\n\n# Visualization-\n\n```{r}\npar(bg = \"lightgray\")\n# group the data by country and count the number of unique companies\nlayoff_by_country <- df %>% group_by(country) %>% summarize(no_of_companies = n_distinct(company)) %>%\n  arrange(desc(no_of_companies)) %>% head(10)\n\n# create the bar plot using barplot\nbarplot(layoff_by_country$no_of_companies, main = \"Number of companies did layoffs by Country\",\n        xlab = \"Country\", ylab = \"Number of companies\", col = \"green\",\n        names.arg = layoff_by_country$country, las = 2)\n\n```\n\nThis code first groups the data by country and counts the number of unique companies in each group. It then arranges the resulting data frame in descending order based on the number of companies and selects the top 10 rows. Finally, it creates a bar plot using the barplot function, with the number of companies on the y-axis and the country on the x-axis. The plot is titled Number of Companies Undertook Lay Offs by Country.\n\nIn the dataset, there is a company based in the United States that laid off 11,000 employees, which is the highest number of layoffs for any company in the dataset. The size of layoffs is very high in both the United States and India, but surprisingly, it is very low in China which is not even in top 10 compared to the United States and India.\n\n```{r}\npar(bg = \"lightgray\")\n# group the data by location and count the number of unique companies\nlayoff_by_city <- df %>% group_by(location) %>% summarize(no_of_companies = n_distinct(company)) %>%\n  arrange(desc(no_of_companies)) %>% head(15)\n\n# create the bar plot using barplot\nbarplot(layoff_by_city$no_of_companies, main = \"Number of Companies did layoffs in the big Cities\",\n        xlab = \"City\", ylab = \"Number of companies\", col = \"red\",\n        names.arg = layoff_by_city$location, las = 2, cex.names = 0.8)\n\n# add the number of companies to each bar using the text function\ntext(x = 1:length(layoff_by_city$no_of_companies), y = layoff_by_city$no_of_companies,\n     labels = layoff_by_city$no_of_companies, pos = 3.9, cex = 0.8)\n\n```\n\nThis code first groups the data by location and counts the number of unique companies in each group. It then arranges the resulting data frame in descending order based on the number of companies and selects the top 20 rows. Finally, it creates a bar plot using the barplot function, with the number of companies on the y-axis and the location (city) on the x-axis. The plot is titled Number of Companies Undertook Lay Offs in the big Cities.\n\nThe San Francisco Bay Area (also known as Silicon Valley), New York City, and Bengalore are all renowned tech hubs that have seen significant numbers of layoffs in recent times. These cities are known for their high concentration of technology companies and are often considered the centers of innovation and growth in the tech industry. However, economic downturns and other factors can lead to layoffs in these areas, resulting in a reduction of the tech workforce in these cities. Now, If we closely observe then we won't see any small cities in this list which says that all the big city area has high layoffs than smaller cities.\n\n```{r}\ntop_industry <- df %>%\n  group_by(industry) %>%\n  summarise(total_laid_off = sum(total_laid_off)) %>%\n  arrange(desc(total_laid_off))\n\n```\n\n```{r}\ndim(top_industry)\n```\n\n```{r}\npar(bg = \"lightgray\")\ncolors <- c(\"red\", \"blue\", \"green\", \"yellow\", \"orange\")\nbarplot(top_industry$total_laid_off, names.arg = top_industry$industry,\n        xlab = \"Industry\", ylab = \"Layoffs\", main = \"Industry vs Layoffs\", col = colors)\n\n```\n\nThe layoffs had a notable effect on three specific industries: transportation, consumer, and retail. These industries were likely negatively impacted by the layoffs in some way such as a decrease in business or financial losses.\n\n```{r}\ndf_industries <- df %>% \n  group_by(industry) %>% \n  summarize(total_laid_off = sum(total_laid_off)) %>% \n  arrange(total_laid_off)\n\nggplot(data = df_industries, aes(x = industry)) +\n  geom_bar(aes(y = total_laid_off), fill = \"red\", stat = \"identity\") +\n  labs(title = \"Total Layoffs in different industries world wide since 2020\", y = \"Number of layoffs reported\") +\n  theme(plot.title = element_text(size = 14),\n        axis.title = element_text(size = 12),\n        axis.text.x = element_text(angle = 90, vjust = 0.5))\n```\n\nOn average 25,000 employees from the Transportation industry were laid off from their respective companies. This was followed by the retail, consumer, finance, and real estate industries in this order.\n\n```{r}\n# create a vector of the top 10 companies with the most layoffs, based on the total_laid_off column\ntop10_idx <- order(df$total_laid_off, decreasing = TRUE)[1:10]\n\n# subset the dataframe to only include the top 10 companies\ndf_top10 <- df[top10_idx, ]\n\n# create a pie chart of the top 10 companies, using the total_laid_off column as the values and the company column as the labels\npie(df_top10$total_laid_off, labels = df_top10$company, main = \"Top 10 companies that laid off\")\n```\n\nHere we can see that the layoff was highest in Meta\\\nafter doing some research, from [source](https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409) we come to know that on November 9, 2022, Meta announced that it had decided to terminate the employment of 11,000 employees, which represents approximately 13% of its total workforce. However, the company did not publicly disclose the specific breakdown of the layoffs among different departments or job levels. It was rumored that the Recruiting and Business teams were disproportionately affected by the layoffs, but there was no official confirmation of this. It is not known how many employees in the Engineering department were affected by the layoffs, or how many junior and senior employees were impacted.\n\nIt seems that the Recruiting and Engineering departments at a company were particularly affected by recent layoffs. These two departments made up around 50% of the total number of self-reported layoffs. The Engineering department appears to have primarily laid off junior employees, while the Product, Marketing, and Sales departments seem to have mostly laid off senior employees. Of the laid-off engineers, it was stated that 46% will require visa support, which may refer to employees who are not citizens or permanent residents of the country in which the company is located and who are working there on a temporary visa. On the other hand, only 8% of laid-off employees from the Recruiting department are expected to require visa support. It is not clear from the information provided the context or circumstances of the layoffs or the specific reasons for the departmental and job level differences.\n\n## **Total layoffs year wise-**\n\n```{r}\ntotal_laid_year <- df %>%\n  group_by(year) %>%\n  summarize(total_laid_off = sum(total_laid_off))\ntotal_laid_year\n```\n\n```{r}\nggplot(data = total_laid_year, aes(x = year, y = total_laid_off)) +\n  geom_bar(stat = \"identity\", color = \"red\") +\n  labs(x = \"year\", y = \"Layoffs\") +\n  ggtitle(\"layoffs year wise\") +\n  theme(plot.background = element_rect(fill = \"yellow\"))\n\n\n\n```\n\n```{r}\ndf %>%\n  group_by(location) %>%\n  summarise(total_laid_off = n_distinct(company)) %>%\n  arrange(location)\n\ndf %>%\n  # Group the data by year and stage\n  group_by(year, stage) %>%\n  # Summarize the data by counting the number of distinct funds raised within each group\n  summarise(n = n_distinct(company), .groups = \"keep\") %>%\n  ggplot(mapping = aes(x = year, y = n, color = stage)) +\n  geom_point() + \n  geom_line() +\n  labs(y = \"Total laid off\", title = \"Total laid off in stages-wise over years\")\n\n\n```\n\n```{r}\ndf %>%\n  group_by(year, stage) %>%\n  summarise(n = n_distinct(funds_raised), .groups = \"keep\") %>%\n  ggplot(mapping = aes(x = year, y = n, color = stage)) +\n  geom_point() + \n  geom_line() +\n  labs(y = \"Funds Raised\", title = \"Funds raised included in the stage over the years\")\n```\n\n```{r}\ndf %>% count(company) %>% arrange(desc(n))\n```\n\n```{r}\ncor(df$funds_raised, df$total_laid_off)\n```\n\n```{r}\n# Using the total_laid_off column as the x-axis and the funds_raised column as the y-axis\n# Group the data by the company column and color the lines red\nggplot(df, aes(x = total_laid_off, y = funds_raised, group = company, color = \"red\")) +\n  geom_line() +\n  labs(x = \"Total Laid Off\", y = \"Funds Raised\", title = \"Funds Raised vs. Total Laid Off\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n```{r}\n# Use the total_laid_off column as the x-axis and the funds_raised column as the y-axis\n# Group the data by the company column and color the lines red\nggplot(df, aes(x = funds_raised, y = total_laid_off, group = company, color = \"red\")) +\n  geom_line() +\n  labs(x = \"Funds Raised\", y = \"Total Laid Off\", title = \"Total Laid Off vs. Funds Raised\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n```{r}\nlibrary(plotly)\n\n# Creating a scatterplot\nplot_ly(data = df, x = ~funds_raised, y = ~total_laid_off, type = \"scatter\", mode = \"markers\", text = ~company)\n# x-axis represents the amount of funds raised by each company\n# y-axis represents the total number of employees laid off by each company\n```\n\n```{r}\nlibrary(plotly)\n\n# Creating a scatterplot\nplot_ly(data = df, x = ~total_laid_off, y = ~funds_raised, type = \"scatter\", mode = \"markers\", text = ~company)\n# x-axis represents the total number of employees laid off by each company\n# y-axis represents the amount of funds raised by each company\n```\n\nThe above plot shows that there is no relationship or dependence between the funds raised and the number of layoffs.\n\n```{r}\nunique(df$stage)\n```\n\n```{r}\ndistinct(df, stage)\n```\n\nThis is a list of all the stages that a company goes through, which in total consists of 15 stages.\n\n```{r}\nlibrary(plotly)\n# Create a new dataframe called df_stage that groups the df by the stage column and summarizes the total_laid_off column by summing the values\ndf_stage <- df %>%\n  group_by(stage) %>%\n  summarize(total_laid_off = sum(total_laid_off)) %>%\n# Sorting the resulting dataframe in descending order\n  arrange(desc(total_laid_off))\n# create a horizontal bar chart using the df_stage. x-axis- total_laid_off & y-axis- stage\nplot_ly(data = df_stage, x = ~total_laid_off, y = ~stage, type = \"bar\", orientation = \"h\", text = ~total_laid_off, color = c('orange')) %>%\n  layout(title = \"Layoffs & company stage\", plot_bgcolor = 'lightblue')\n\n```\n\nThe companies that were in the initial public offering (IPO) stage had the highest number of layoffs, followed by start-up companies whose stage was unknown. On the other hand, the least amount of layoffs occurred in seed stage companies. This pattern suggests that the companies that were further along in their development and had already gone public were more likely to experience layoffs, while the newer, smaller companies that were still in the early stages of development were less likely to do so.\n\n# **Reflection**\n\nAs someone who had no previous experience with R and no technical background with R language, this class, all the challenges and project were challenging for me. I chose to work with a Layoffs data set because it is the type of data that I am really familiar with since I have looking for a job from a long time and I was up to date with the market since 2019. To begin the analysis, the data set was cleaned and any missing values were handled. This step was important because it allowed for the creation of more accurate figures and calculations. The data was cleaned in order to facilitate this process. Once the data cleaning was completed, further analysis could be conducted.\n\nOne of the most challenging aspects for me was identifying the focus of the data set in terms of cleaning, transforming and visulizing the data, as well as figuring out where to start with the analysis of the data. This was the first time I was doing data analysis, I have mostly worked as a front end developer but never as a data scientist. I decided to focus on the basics of analysis in this project to challenge myself, and if I were to continue with this project, I would look for ways to cross-tabulate the data in more depth, such as by combining many different data points to see different data analysis.\n\nThere were a large number of missing records in the dataset, and the data from 1,300 companies is not sufficient to give us a comprehensive understanding of layoffs. If we could obtain data from at least 10,000 companies, it would be much more useful in terms of understanding the impact of layoffs. One idea I will implement is to compare the data set year by year and observe the yearly layoff trend for the entire world, as well as for the United States alone and for the rest of the world excluding the United States. I will also look at how various industries performed on a yearly basis in India, and by removing data about India from the rest of the world, I will examine the results again to see which fields are consistently performing well or poorly. Another idea is to examine the yearly layoff trends excluding both the United States and India.\n\nOverall, I believe that this project was helpful in allowing me to do the application of what I learned in this class. As I completed the project, I felt that I had gained a basic understanding of the functionality of R and how to structure basic code of R and also how the data analysis works. I found that I was able to approach each challenge more easily as I progressed through the project, although I still feel as though I have only done little bit of R and many more amount to learn. My goal in learning R in depth so I will be able to contribute to the corporate world by learning all functions of R from this class that I am familiar with to read data, filter data, provide specific data, clean data, transform data and very importantly visulize the data. I think all the challenges and speciflcally this project has helped me to develop these skills.\n\n# Conclusion\n\nThe United States has experienced the highest number of layoffs compared to any other country, with India coming in second. Of all the layoffs that have occurred since 2020, more than 75% have been in the United States. In 2022, the consumer industry in the United States has been the hardest hit by layoffs, while the food industry has been most affected outside the United States. Layoffs have also been seen in the transportation and food industries globally. The travel industry has experienced considerably fewer layoffs globally in 2022 compared to the previous year.\n\nAccording to the [research](https://www.demandsage.com/layoff-statistics/), in the United States, 40% of the population has experienced a layoff at least once in their career. In the past two years, 28% of Americans have reported being laid off from their company. In July 2022, 160 tech companies underwent layoffs. In 2022, there were a total of 2.12 million layoffs recorded in the business and professional services industry. In 2021, there were a total of 17 million layoffs recorded across all industries in the US. The trade and transportation industry saw 1.46 million layoffs between June 2021 and June 2022. Among adults between the ages of 18 and 34, 61% reported experiencing significant pressure and anxiety related to the possibility of being laid off. Women are 25% less likely to be laid off by companies compared to men. In the third quarter of 2022, 23,158 layoffs were recorded. A survey found that 46% of employees felt unprepared for layoffs and separations.\n\nDespite the significant changes and challenges brought about by the coronavirus pandemic, tech companies continue to prioritize engineering talent in their outbound recruitment efforts. It is possible that the pandemic has even intensified this trend, as startups may be focusing more on product development and less on sales and customer success due to slowed customer growth. Previous analysis has shown that tech layoffs have disproportionately affected sales and customer success roles. As a result, tech companies may be able to redirect their resources towards product development initiatives, leading to a sustained demand for engineers.\n\n# **Bibliography**\n\nLayoffs.fyi. (n.d.). Layoffs and job loss tracker. Retrieved from https://layoffs.fyi/.\n\nR Project. (n.d.). R: A language and environment for statistical computing. Retrieved from https://www.r-project.org/.\n\nKaggle. (n.d.). Layoffs 2022 \\[Data set\\]. Retrieved from https://www.kaggle.com/datasets/swaptr/layoffs-2022.\n\nSmith, J. (2022, November 5). Meta layoffs analysis. Retrieved from [**https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409**](https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409)\n\nDemand Sage. (n.d.). Layoff statistics. Retrieved from [**https://www.demandsage.com/layoff-statistics/**](https://www.demandsage.com/layoff-statistics/)\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Manan_Patel_PostTemplate.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.37","execution":{"freeze":"auto"},"smooth-scroll":true,"page-layout":"full","mainfont":"Open Sans","linkcolor":"#881c1c","theme":{"light":["flatly","../styles.scss"],"dark":["darkly","../styles.scss"]},"comments":{"giscus":{"repo":"DACSS/601_Fall_2022","category":"Announcements"}},"toc-location":"right","search":true,"title":"Layoffs dataset","author":"Manan Patel","desription":"Analyzed on layoffs in US and in other countries","date":"12/18/2022","categories":["hw1","challenge1","my name","dataset","ggplot2"],"code-copy":true},"extensions":{"book":{"multiFile":true}}}}}