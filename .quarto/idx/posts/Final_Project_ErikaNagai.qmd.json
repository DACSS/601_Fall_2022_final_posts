{"title":"Final Project Erika Nagai","markdown":{"yaml":{"title":"Final Project Erika Nagai","author":"Erika Nagai","description":"Female representation in movie stories","date":"`r Sys.Date()`","format":{"html":{"toc":true,"code-fold":true,"code-copy":true,"code-tools":true}},"categories":["movie","gender","bechdel test","female representation","Erika Nagai"],"editor":{"markdown":{"wrap":72}}},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nEven though half of the moviegoers in the United States are women, their\nstory is not represented as much as that of men. Only 35% of the main\ncharacters in the best movies of 2021 were female, and male characters\noutnumbered female characters in 85% of the films. (Women and Hollywood,\n2022) Also lacking are women behind the scenes in the film business. In\n2021, just 12% of the top 100 films are directed by women. (Lauzen,\nn.d.)\n\nIn this project, I focused on analyzing female representation in movie\nstories rather than in their production. I used the data from three\nmajor movie databases, The Movie Database (TMDb), MovieLens, Open Movie\nDatabase (OMDb), and the Bechdel Test, one of the most common criteria\nto measure female presentation.\n\nI would like to answer the following questions in this analysis:\n\n1.  **Is female representation in movie stories improving over time?**\n\n2.  **What genres are doing better than others in terms of female\n    representation?**\n\n3.  **Are movies with good female representation more popular?**\n\n4.  **Do movies with good female representation more money?**\n\nThis analysis intends to document the data cleaning process, which is\nquite long. If you are curious only about the analysis results, please\nskip to [Data Analysis and Visualization] part.\n\n```{r}\n# install libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(summarytools)\nlibrary(lubridate)\nlibrary(ggridges)\n```\n\n## Read in data\n\nFor this analysis, I used the following different data sets.\n\n### (1) \"The Movie Data set\" from Kaggle :\n\nThis dataset was obtained from Kaggle \"The Movie Data\nset\"(<https://www.kaggle.com/datasets/rounakbanik/the-movies-dataset?resource=download&select=movies_metadata.csv>).\n\n```{r}\n\n#(1) movies_metadata.csv obtained from Kaggle\nmovie = read_csv(\"_data/movies_metadata.csv\")\n```\n\n### (2) Bechdel test API:\n\nI generated the data by using the bechdel test API\n<https://bechdeltest.com/api/v1/doc>.\n\n```{r}\n\n#(2) bechdel test obtained by using bechdel API\n\nlibrary(rjson)\nlibrary(jsonlite)\n\n#json_file <- \"http://bechdeltest.com/api/v1/getAllMovies\"\n#bechdel <- read_json(path = json_file, simplifyVector = TRUE)\n#bechdel$titleId <- paste(\"tt\",bechdel$imdbid, sep = \"\")\n\n#write.csv(bechdel, file = \"_data/bechdel.csv\")\nbechdel <- read_csv(\"_data/bechdel.csv\")\n\n```\n\n### (3) Open Movie Database (OMDb):\n\nThis dataset was generated by using Open Movie Database (OMDb) API\n<https://www.omdbapi.com/>. OMDb provides detailed information such as\ndirector, writer, nominated award, the number/score of reviews on IMDb,\netc... if you provide the name or IMDb id of movies. I decided to use\nthis database because it gives me data related to movies' popularity and\nfinancial success of the films, which \"The Movie Data set\" doesn't\ninclude.\n\nOMDb doesn't give you a list of all movies registered on it. Instead,\nyou need to provide the exact movie title or the IMDb id to get the list\nof information. Thus, I will use this API once I have the data that join\nmovies_metadata.csv and the Bechdel test. (Please refer to \"[Read in\ndata / Describe data (OMDb)](#read-in-data-describe-data-omdb)\" for this\nprocess.)\n\n## Describe data\n\n### (1) \"The Movie Data set\"\n\nThis data was originally created from The Movie Database\n(<https://www.themoviedb.org/>) and MovieLens\n(<https://movielens.org/>).This movie dataset was generated by\nMovielens, a (non-profit) movie review website\n(<https://movielens.org/>), and was obtained from the following Kaggle\nlink.\n(<https://www.kaggle.com/datasets/rounakbanik/the-movies-dataset?resource=download&select=movies_metadata.csv>)\n\nThe movie dataset contains 45,466 movies with release date between\nDecember 9th, 1874 and December 16th, 2020.\n\nThe data includes the general information of movies, such as genres,\nrevenue, run time, languages, status (released/in production etc...).\n\n```{r}\nprint(summarytools::dfSummary(movie),\n      varnumbers = FALSE,\n      plain.ascii  = FALSE,\n      style        = \"grid\",\n      graph.magnif = 0.80,\n      valid.col    = FALSE,\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n### (2) Bechdel test\n\nThis data (`bechdel`) dataset documents the Bechdel test rating of 9630\nmovies released between 1874 and 2022. Each row represents a movie.\n\nAccording to \"Merriam-Webster\", the Bechdel test is \"*a set of criteria\nused as a test to evaluate a work of fiction (such as a film) based on\nits inclusion and representation of female characters*\"\n(<https://www.merriam-webster.com/dictionary/Bechdel%20Test>)\n\nA movie passes the Bechdel test when **it has at least two female\nfeatured characters that talk to each other about other than a man\n(men)**.\n\nIn `bechdel`, the Bechdel test rating is registered in the following\nmanner.\n\n0 \\~ No two female characters\n\n1 \\~ Two female characters who don't talk to each other\n\n2 \\~ Two female characters talk to each other about a man (men)\n\n3 \\~ Passes Bechdel test: Two female characters talk to each other about\nother than a man (men)\n\nApart from Bechdel ratings, this dataset (`bechdel`) contains the\nreleased year, title of movies, and id. id that starts with \"tt\"\nfollowed by 7 digits is the IMDb id and can work as a foreign key when\njoining this data with the `movie` dataset.\n\n```{r}\nprint(summarytools::dfSummary(bechdel),\n      varnumbers = FALSE,\n      plain.ascii  = FALSE,\n      style        = \"grid\",\n      graph.magnif = 0.80,\n      valid.col    = FALSE,\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n## Tidy data\n\n### (1) TMDb data\n\n### **Checking missing values**\n\nFirst of all, I took a look at missing values (NA values) in the data.\n\n```{r}\nmovie %>% select(everything()) %>%\n  summarise_all(funs(sum(is.na(.)))) %>%\n  t()\n```\n\n### **Deleting unnecessary columns**\n\nI deleted the following columns, which seem irrelevant for this analysis\nor have too many missing values.\\\n- `adult`: This information doesn't add any significant meaning as\nalmost all of the observations have FALSE value for this column\n\n\\- `belong_to_collection`: This column has 40000+ missing values\\\n- `homepage`: Unnecessary for this analysis\n\n\\- `overview`: Unnecessary for this analysis\n\n\\- `poster_path`: Unnecessary for this analysis\n\n\\- `tagline`: Unnecessary for this analysis\\\n- `video`: This information doesn't add any significant meaning as\nalmost all of observations have FALSE value for this column\n\n\\- `popularity`: This information may be interesting, however, it is not\nclear how this popularity is measured or where it was generated.\nTherefore, I decided to use popularity data from OMDb.\n\n\\- `vote_average`: Same as `popularity`\n\n\\-`vote_count`: Same as `popularity`\n\nThen, I changed the order of the columns.\n\n```{r}\nmovie <- movie %>% select(-c(\"adult\", \"homepage\", \"overview\", \"poster_path\", \"tagline\", \"belongs_to_collection\", \"poster_path\", \"video\", \"popularity\", \"vote_average\", \"vote_count\"))\n\ncol_order <- c(\"title\", \"original_title\", \"imdb_id\", \"id\", \"production_companies\", \"production_countries\", \"status\", \"release_date\", \"runtime\", \"revenue\", \"budget\", \"original_language\", \"spoken_languages\", \"genres\")\nmovie <- movie[, col_order]\n\ncolnames(movie)[4] <- \"movielens_id\"\n\n```\n\n### **Cleaning data in JSON nested list format**\n\nThe values in some certain columns such as \"genres\",\n\"production_companies\", \"production_countries\",\"spoken_languages\" are in\na JSON list format for example:\n\n> \" \\[{'id': XXXX, 'content(name/genre/title)': XXX}, {'id': XXXX,\n> 'content(name/genre/title): XXX}\\] \"\n\n```{r}\nmovie %>% select(c(\"genres\", \"production_companies\", \"production_countries\", \"spoken_languages\"))\n\n# These columns include [] {} and ' in their values so I made a function remove_simbols that removes these unnecessary symbols.\nremove_symbols <- function(x) {\n  removed_x <- str_remove_all(x, \"\\\\{|\\\\}|\\\\[|\\\\}|\\\\]|'|,|id|name|:| \")\n  return(removed_x)\n}\n```\n\n#### (1). Tidying `Genres`\n\nEach movie contains information on one or more (up to 8) genres in a\nsingle column. To organize the information, the multiple genres\ncontained in `genre` are split by \"\\],\" so that each genre is contained\nin eight new columns, genre1-genre8. Then, I removed unnecessary symbols\nsuch as ,.\n\n```{r}\n\n# Separating the `genre` by \"},\"\nmovie <- movie %>% \n  separate(genres, c(\"genre1\", \"genre2\", \"genre3\", \"genre4\", \"genre5\", \"genre6\", \"genre7\", \"genre8\"), \"\\\\},\", remove = FALSE)\n\n# Remove unnecessary symbols from each columns\n\nmovie$genre1 <- remove_symbols(movie$genre1)\nmovie$genre2 <- remove_symbols(movie$genre2)\nmovie$genre3 <- remove_symbols(movie$genre3)\nmovie$genre4 <- remove_symbols(movie$genre4)\nmovie$genre5 <- remove_symbols(movie$genre5)\nmovie$genre6 <- remove_symbols(movie$genre6)\nmovie$genre7 <- remove_symbols(movie$genre7)\nmovie$genre8 <- remove_symbols(movie$genre8)\n\nmovie %>% \n  select(matches(\"[1-9]\"))\n\n```\n\nI managed to separate the genre information above. Now all values in\ngenre 1 - 8 has a value in the format of \"number + name of genre\"\n(example: 35Comedy)\n\nHowever, there are 2,445 observations whose genre value doesn't fit the\nabove format. Most of them don't have any genre assigned so their\n`genre1` values are empty or blank, which means they don't have any\ngenre assigned to them.\n\n```{r}\nmovie %>% filter(!str_detect(genre1, \"^[0-9]\")) %>% select(starts_with(\"genre\"))\n```\n\nHowever, looking at them closely, there are three observations whose\n`genre` value that is NOT blank but have strange strings.\n\nThe values in these observations such as \"Carousel Production\" and\n\"Aniplex\" don't look like a name of genres but that of production\nstudios. Also their `original_title` values don't look like a title of\nmovies but information of languages. It seems like these observations\nwere not correctly read in because their values in other columns look\nweird.\n\nSince these observations are not reliable, I decided to delete them from\nthis dataset.\n\n```{r}\nmovie %>% filter(!str_detect(genre1, \"^[0-9]\") &!str_detect(genre1, \"^[ \\t\\n]*$\")) %>% #^[ \\t\\n]*$ is a regular expression for blank.\n  select(c(original_title, production_countries, genre1:genre3))\n\nmovie_clean1 <- movie %>% filter(!str_detect(genre1, \"^[A-Z]\"))\n```\n\nGenre information is more organized but is still not easy to be\nanalyzed. Thus, I decided to make dummy variables of each genre.\n\nFor example, if movie A is categorized as \"comedy\" and \"adventure\", the\nline of movie A should have 1 in the \"comedy\" column and the \"adventure\"\nrespectively and 0 in columns of other genres.\n\n```{r}\n\n#https://community.rstudio.com/t/creating-dummy-columns-based-on-multiple-columns/58145/3\nmovie_clean1 <- movie_clean1 %>% \n  pivot_longer(cols = matches(\"genre[1-9]\")) %>%\n  add_column(count = 1) %>%\n  arrange(value) %>%\n  filter(str_detect(value, \"^[0-9]\")) %>%\n  mutate(value1 = str_replace_all(value, \"[0-9]+\", \"\")) %>%\n  select(-c(value, name)) %>%\n  arrange(title) %>%\n  pivot_wider(\n    names_from = value1, \n    values_from = count, \n    values_fill = list(count=0),\n    values_fn = list(count = mean)) %>%\n  arrange(title)\n\n# I also deleted genre \"TVMovie\" and \"Foreign\" because they're more format or origin country information rather than genre.\nmovie_clean1 <- movie_clean1 %>% select(-c(\"TVMovie\",\"Foreign\"))\n\n```\n\n#### (2). Tyding `Production_countries`\n\nThe values in `production_countries` are written in the following way.\n\n> \\[{'iso_3166_1': 'abbreviation of country','name': 'full country\n> name'}\\]\n\nWhen there is more than one country in the value, I took the first\ncountry in account for this analysis.\n\n```{r}\nmovie_clean1$production_countries <- remove_symbols(movie_clean1$production_countries)\nmovie_clean1$production_countries <- str_extract(movie_clean1$production_countries,\"(?<=_1)\\\\w{2}\")\n\nmovie_clean1 %>% select(production_countries)\n```\n\n#### (3). Tyding `production_companies` & `spoken_languages`\n\nThe values in both of `production_companies` and `spoken_languages` are\nin the following format.\n\n> \\[{'name': 'XXXX', 'id': ---}\\] \\> \\[{'iso_639_1':'XXXX',\n> 'name':\"----}\\]\n\nI only need the information that is written as XXXX in this format.\n\n```{r}\n\nmovie_clean1$production_companies <-str_remove_all(movie_clean1$production_companies, \"'id': [0-9]*|'name':|\\\\[|\\\\]|'|\\\\{|,\") %>%\n  str_replace_all(\"\\\\},\", \",\") %>%\n  str_replace_all(\" \\\\} \", \",\")%>%\n  str_remove(\" \\\\}\")\n\nmovie_clean1$spoken_languages <-str_remove_all(movie_clean1$spoken_languages, \"'iso_639_1':|'name': '\\\\w+'|\\\\[|\\\\]|'|\\\\{|,\") %>%\n  str_replace_all(\" \\\\} \", \",\") %>%\n  str_remove_all(\" \\\\}\")\n\nmovie_clean1 %>% select(production_companies, spoken_languages)\n\n\n```\n\n### Adding a new column\n\nA new column `years` was created to group years by decade.\n\n```{r}\nmovie_clean1 <- movie_clean1 %>% \n  mutate(\n    years = case_when(\n    lubridate::year(release_date) < 1920 ~ \"Before 1920\",\n    lubridate::year(release_date) >= 1920 & lubridate::year(release_date) < 1930 ~ \"1920s\",\n    lubridate::year(release_date) >= 1930 & lubridate::year(release_date) < 1940 ~ \"1930s\",\n    lubridate::year(release_date) >= 1940 & lubridate::year(release_date) < 1950 ~ \"1940s\",\n    lubridate::year(release_date) >= 1950 & lubridate::year(release_date) < 1960 ~ \"1950s\",\n    lubridate::year(release_date) >= 1960 & lubridate::year(release_date) < 1970 ~ \"1960s\",\n    lubridate::year(release_date) >= 1970 & lubridate::year(release_date) < 1980 ~ \"1970s\",\n    lubridate::year(release_date) >= 1980 & lubridate::year(release_date) < 1990 ~ \"1990s\",\n    lubridate::year(release_date) >= 1990 & lubridate::year(release_date) < 2000 ~ \"1990s\",\n    lubridate::year(release_date) >= 2000 & lubridate::year(release_date) < 2010 ~ \"2000s\",\n    TRUE ~ \"2010s\"\n  )\n  )\n```\n\nNow, the dataset is cleaner. Look at the summary again.\n\n```{r}\nprint(summarytools::dfSummary(movie_clean1),\n      varnumbers = FALSE,\n      plain.ascii  = FALSE,\n      style        = \"grid\",\n      graph.magnif = 0.80,\n      valid.col    = FALSE,\n      method = 'render',\n      table.classes = 'table-condensed')\n\n```\n\n### (2) Bechdel data\n\n#### Removing and Mutating Columns\n\n`imdbid` and `titleId` are duplicated because titleId is \"tt+imdbid\".\n`movie_clean1` data frame has IDs in the same format (starting with tt)\nas `titleId` of `bechdel` data frame so I deleted `imdbid` column.\n\nAlso, `year` and `title` information is available in movie data frame,\nthus I deleted them.\n\nI made a new column `bechdel_pass` where 1 means the movie passes\nbechdel test and 0 means otherwise.\n\n```{r}\n#\n\nbechdel <- bechdel %>% select(-c(\"imdbid\",\"...1\",\"title\"))\ncolnames(bechdel) <- c(\"year\", \"bechdel_rating\", \"id\", \"titleid\")\n\nsummary(bechdel)\n# Changing the column order\ncol_order <- c(\"id\", \"titleid\",\"year\", \"bechdel_rating\")\nbechdel <- bechdel[, col_order]\n\n# Mutate a new column bechdel_pass\nbechdel <- bechdel %>% mutate(\n  bechdel_pass = case_when(\n    bechdel_rating == 3 ~ 1,\n    TRUE ~ 0\n  )\n)\n\n# Change data types of columns\nbechdel$bechdel_rating <- factor(bechdel$bechdel_rating, levels = c(\"0\", \"1\", \"2\", \"3\"))\nbechdel$bechdel_pass <- factor(bechdel$bechdel_pass, levels = c(\"0\", \"1\"))\n```\n\n### Sense Check\n\nThis data looks quite clean, however, I realized that the minimum number\nof year is 1010, which is weird. \"Inazuma Eleven The Movie\" was released\nin 2010, but it seems to have been mistakenly recorded as 1010. So I\nmanually corrected the data.\n\n```{r}\nsummary(bechdel)\n\nbechdel %>% \n  filter(year < 1800)\n\nbechdel$year[bechdel$year == 1010] <- 2010\n```\n\n## Join data sets\n\nWe have two data frames `movie` and `bechdel` , which have imdb id as a\nforeign key.\n\n```{r}\nmovie_bechdel_join <- inner_join(movie_clean1, bechdel, \n                                 by=c(\"imdb_id\" = \"titleid\"),\n                                 copy = TRUE)\n\n```\n\n## Read in data / Describe data (OMDb) {#read-in-data-describe-data-omdb}\n\nAs we have a joined data, I read in the movie popularity data from OMDb\nusing OMDb API.\n\n`omdb_df` has 5 columns\n\n-   imdbID: can be used as a foreign key when joining with other data\n    frames\n\n-   Director: Director's name\n\n-   Metascore: Review scores from 0 to 100 on the metacritic website\n    (<https://www.metacritic.com/movie>). They are weighted averages.\n    and reviews by certain reviewers are given more weight, however the\n    detail is not revealed.\n\n-   imdbRating: Review scores from 0 to 10 on IMDb website\n    (<https://www.imdb.com/>). They are weighted averages.\n\n-   imdbVotes: Number of votes on IMDb website.\n\n```{r}\n\n# Generating OMDb dataframe\n# imdb_id_list <- c()\n# \n# for (i in c(1:length(movie_bechdel_join$imdb_id))) {\n#   imdb_id_list[[i]] <- movie_bechdel_join$imdb_id[i]\n# }\n# \n# omdb_list <- lapply(imdb_id_list, function(movie_id) {\n#   actor_vector <- find_by_id(movie_id)\n#   actor_vector\n# })\n# \n# omdb_df <- tibble(place = omdb_list) %>%\n#   unnest_wider(place) %>%\n#   select(c(\"imdbID\", \"Director\", \"Metascore\", \"imdbRating\", \"imdbVotes\", \"BoxOffice\")) %>% unnest() %>% distinct()\n\n#write.csv(omdb_df, \"_data/omdb.csv\")\nomdb_df <- read_csv(\"_data/omdb.csv\")\nomdb_df$Metascore <- as.numeric(omdb_df$Metascore)\nomdb_df$BoxOffice <- omdb_df$BoxOffice %>%\n  str_replace_all(\",\", \"\") %>% \n  str_extract(\"[0-9]*(?=$)\") %>% \n  as.numeric()\n\nomdb_df <- omdb_df %>% select(-...1)\nglimpse(omdb_df)\n```\n\nNow I have the data from OMDb as `omdb_df`. Let's join\n`movie_bechdel_join` and `omdb_df.`\n\n```{r}\ndata <- inner_join(movie_bechdel_join, omdb_df, \n                                 by=c(\"imdb_id\" = \"imdbID\"),\n                                 copy = TRUE)\n\n```\n\n## Data Analysis and Visualization\n\n### Is female representation in movie stories improving over time?\n\nTo find out the answer for this questions, I looked at the result of the\nBechdel test.\n\nThe number of movies that pass the Bechdel test increases over time,\nespecially after around 1980 as the total number of released movies\nincreased.\n\n```{r}\n\n\nmovie_bechdel_join %>%\n  filter(lubridate::year(release_date) > 1920) %>%\n  group_by(year = lubridate::year(release_date), bechdel_rating) %>%\n  dplyr::summarize(n_total = n()) %>%\n  ggplot(aes(x=year, y= n_total, fill = bechdel_rating)) + geom_area(stat = \"identity\") +\n  scale_fill_manual(values = c(\"gray0\", \"gray40\", \"gray80\", \"orange\"),\n                    labels=c(\"0.No two women\", \n                             \"1.Two women\", \n                             \"2.Two women talk to each other about men\", \n                             \"3.Two women talk to each other about other than men (Pass)\")) +\n  labs(x= \"year\", y = \"Number\", title = \"The number of movies by Bechdel test ratings\", fill = \"Bechdel rating\")+\n  scale_x_continuous(n.breaks=14) +\n  theme(legend.position=\"bottom\") +\n  guides(fill = guide_legend(nrow = 2))\n  \n\n```\n\n**However, the total number of released movies is increasing as well. Is\nthe percentage of films that pass the Bechdel test increasing?**\n\nIn the 1920s, which is 100 years ago, less than 20% of films passed the\nBechdel test. There was a big increase in the percentage of Bechdel\ntest-passing movies in the 1930s, however, the percentage of films\npassing the Bechdel test was stagnant at a bit lower than 50% from the\n1930s to the 1950s. From 1950s to 1970s, the representation of women in\nthe film somehow went backward, with less than 45% of films meeting the\nrequirements of the Bechdel test; from the 1970s to the present, the\npercentage of films that pass the Bechdel test has continued to\nincrease, reaching approximately 70% now. Although the representation of\nwomen seems to have improved since 1970, it has not improved\ndramatically compared to the 1930s and 1940s.\n\n```{r}\ndata_with_p <- data %>%\n  filter(lubridate::year(release_date) > 1920) %>%\n  group_by(years, bechdel_rating) %>%\n  dplyr::summarize(n = n()) %>%\n  mutate(percentage = n/sum(n)*100)\n```\n\n```{r}\ndata_with_p %>%\n  ggplot(aes(x=years, y= percentage, fill = bechdel_rating)) + \n  geom_col() +\n  geom_text(aes(label=paste0(round(percentage), \"%\")), color=\"white\", font=\"bold\", position = position_stack(vjust = 0.5)) +\n  \n  scale_fill_manual(values = c(\"gray0\", \"gray40\", \"gray80\", \"orange\"),\n                    labels=c(\"0.No two women\", \n                             \"1.Two women\", \n                             \"2.Two women talk to each other about men\", \n                             \"3.Two women talk to each other about other than men (Pass)\")) +\n  labs(x=\"year\", y=\"percent\", title = \"% of movies that pass/don't pass Bechdel Test\", fill=\"Bechdel Rating\") +\n  scale_y_continuous(n.breaks=10) +\n  theme(legend.position=\"bottom\") +\n  guides(fill = guide_legend(ncol = 2))\n```\n\nPerhaps the percentage of films that pass the Bechdel test has not\nchanged too dramatically compared to 70 years ago. However, if we focus\non the movies that do NOT pass the Bechdel test, we can see a different\ntrend happening.\n\nIn the 1920s, the majority of films did not feature two significant\nwomen; this trend changed greatly in the 1930s, with the percentage of\nfilms that did not feature two women decreasing significantly, peaking\nin the 1960s to about 20%, and then declining.\\\nThe percentage of films in which the only conversation between female\ncharacters is about men also decreased from 1930 to the 2010s.\\\nInterestingly, however, the percentage of films in which female\ncharacters do not speak to each other (dark gray in the figure) has\nchanged very little from the 1930s to the 2010s.\\\n\n```{r}\ndata_with_p %>%\n  filter(bechdel_rating!=\"3\") %>%\n  ggplot(aes(x=years, y= percentage, fill = bechdel_rating)) + \n  geom_col()+\n  geom_text(aes(label=paste0(round(percentage), \"%\")), color=\"white\", font=\"bold\", position = position_stack(vjust = 0.5)) +\n  scale_fill_manual(values = c(\"gray0\", \"gray40\", \"gray80\", \"orange\"),\n                    labels=c(\"0.No two women\", \n                             \"1.Two women\", \n                             \"2.Two women talk to each other about men\")) +\n  labs(x=\"year\", y=\"percent\", title = \"% of movies that do NOT pass Bechdel test by Bechdel test criteria\", fill = \"Bechdel Rating\", subtitle = \"% doesn't add up to 100% because it is missing the % of the movies that pass Bechdel test\") +\n  scale_y_continuous(n.breaks=10) +\n  theme(legend.position=\"bottom\") +\n  guides(fill = guide_legend(nrow = 2))\n```\n\n### **What category represents women better?**\n\nI focused on 4428 movies released between 2000 and 2020 because I want\nto do category-based analysis of a recent situation, and it's better to\nfocus on the period where more movies were released to observe the\ntrend.\n\nThe degree to which women are portrayed in a film's story varies widely\nfrom genre to genre.\n\nThe genre with the highest percentage of films passing the bechdel test\nis Romance (72%) and the lowest is Western (22%), showing a large\ndifference.\n\nInterestingly, not only the percentage of films that pass the Bechdel\ntest, but also the percentage that meet each of the three criteria for\npassing the Bechdel test varies widely by genre.\n\nFor example, Western, War, and Documentary struggle more than other\ngenres to feature two female characters. (To be precise, the Bechdel\nTest is for evaluating fictional stories, so it may not be appropriate\nto evaluate Documentary.)\n\n```{r}\n\nviz_by_genre <- data %>%\n  pivot_longer(cols = c(War:Music),names_to = \"genre_name\", values_drop_na = TRUE) %>%\n  filter(value == 1) \n\n\nviz_by_genre_with_p <- viz_by_genre %>%\n  group_by(genre_name, years, bechdel_rating) %>%\n  dplyr::summarize(n=n()) %>%\n  mutate(proportion = n/sum(n),\n         percentage=proportion*100)\n\nviz_by_genre_with_p %>%\n  filter(years %in% c(\"2000s\", \"2010s\")) %>%\n  group_by(genre_name, bechdel_rating) %>%\n  summarise(per=mean(percentage)) %>%\n  arrange(desc(bechdel_rating), desc(per)) -> order_genre\n\n\nviz_by_genre_with_p$genre_name <-factor(viz_by_genre_with_p$genre_name, levels = order_genre$genre_name[1:18])\n\nviz_by_genre_with_p %>%\n  filter(years==\"2000s\"|years==\"2010s\") %>%\n  group_by(genre_name, bechdel_rating) %>%\n  summarize(n=sum(n)) %>%\n  mutate(p=n/sum(n),\n         percentage = 100*p) %>%\n  ggplot(aes(x=genre_name, y=percentage, fill= bechdel_rating)) +\n  geom_col() +\n  geom_text(aes(label=paste0(round(percentage), \"%\")), color=\"white\", position=position_stack(vjust=0.5), size=3)+\n  scale_fill_manual(values = c(\"gray0\", \"gray40\", \"gray80\", \"orange\"),\n                    labels=c(\"0.No two women\", \n                             \"1.Two women\", \n                             \"2.Two women talk to each other about men\", \n                             \"3.Two women talk to each other about other than men (Pass)\")) +\n  labs(x=\"Genre\", y=\"%\", fill=\"Bechdel rating\")+\n  coord_flip()  +\n  theme(legend.position=\"bottom\") +\n  guides(fill = guide_legend(nrow = 2))\n```\n\nAbove we looked at trends over the past 20 years, but what if we look at\nthe historical trends over past 100 years?\\\nSome genres continue to improve their representation of women compared\nto the past, while others remain the same.\\\nFor example, Horror, Adventure, Science Fiction, Animation, and Fantasy\nhave gradually increased the percentage of films that pass the Bechdel\ntest.\\\nWestern, History, War, and Crime, Comedy on the other hand, have not\nchanged much in terms of female representation compared to 100 years\nago.\\\n\n```{r}\n\nviz_by_genre_with_p %>%\n  filter(years!=\"Before 1920\") %>%\n  ggplot(aes(x=years, y= percentage, fill = bechdel_rating)) + \n  geom_col() +\n  facet_wrap(~genre_name, ncol = 5)+\n  scale_fill_manual(values = c(\"gray0\", \"gray40\", \"gray80\", \"orange\"),\n                    labels=c(\"No two female characters\", \"Two female characters\", \"That talk each other\", \"Other than a man (Passes Bechdel Test)\")) +\n  labs(x = \"year\", y = \"percent\", title = \"Proportion of movies that pass / don't pass Bechdel test by categories\")+\n  theme(legend.position=\"bottom\") +\n  guides(fill = guide_legend(nrow = 2)) +\n  scale_x_discrete(breaks = c('1920s', '1960s', '2010s'),\n                   labels = c('1920', '1960', '2010'))\n  \n\n```\n\n### **Do movies with good female representation succeed in gaining more popularity on online review site?**\n\nAgain, I focused on the movies released after 2000 to see the recent\ntrends.\n\nI compared **Metascore** and **IMDb** ratings of the films that pass and\ndon't pass the Bechdel test.\n\nThe movies that don't pass the Bechdel test seem to score higher on\nMetascore, however, the difference is quite small, and there seems to be\nno relationship between whether a film passes the Bechdel test and its\nreputation (Metascore).\n\n```{r}\ndata %>%\n  filter(lubridate::year(release_date) > 2000) %>%\n  ggplot(aes(x=bechdel_pass, y=Metascore)) + \n  geom_boxplot() +\n  scale_x_discrete(labels=c(\"0: Don't pass Bechel\", \"1: Pass Bechdel\")) +\n  labs(x=\"Bechdel Test\")\n```\n\nT-test shows that there is no statistically significant difference in\nMetascores of the movies that pass and that don't pass Bechdel test.\n\n```{r}\nttest_pass <- data %>% \n  filter(bechdel_pass == \"1\" & lubridate::year(release_date) > 2000) %>%\n  select(c(\"bechdel_pass\", \"imdbRating\", \"imdbVotes\", \"Metascore\", \"BoxOffice\"))\n\nttest_not_pass <- data %>%\n  filter(bechdel_pass == \"0\" & lubridate::year(release_date) > 2000) %>%\n  select(c(\"bechdel_pass\", \"imdbRating\", \"imdbVotes\", \"Metascore\", \"BoxOffice\"))\n\nt.test(ttest_pass$Metascore, ttest_not_pass$Metascore)\n```\n\nThen, I compared the IMDb scores of the movies that pass and don't pass\nBechdel test. Those that don't pass Bechdel test seem to score a bit\nhigher.\n\n```{r}\ndata %>%\n  filter(lubridate::year(release_date) > 2000) %>%\n  ggplot(aes(x=bechdel_pass, y=imdbRating)) + \n  geom_boxplot() +\n  scale_x_discrete(labels=c(\"0: Don't pass Bechel\", \"1: Pass Bechdel\")) +\n  labs(x=\"Bechdel Test\", y=\"IMDb Rating\")\n```\n\nT-test shows that the movies that do not meet Bechdel test criteria\nscore statistically higher than those that do.\n\n```{r}\n\nt.test(ttest_pass$imdbRating, ttest_not_pass$imdbRating)\n```\n\n### **Do movies with good female representation succeed in making more money?**\n\n```{r}\ndata %>%\n  filter(lubridate::year(release_date) > 2000) %>%\n  ggplot(aes(x=bechdel_pass, y=BoxOffice)) + \n  geom_boxplot() +\n  scale_x_discrete(labels=c(\"0: Don't pass Bechel\", \"1: Pass Bechdel\"))\n\n```\n\nEven though the average box office amount of not-Bechdel-passing movies\nis higher than that of Bechdel-passing movies, T-test shows that the\ndifference is not significant.\n\n```{r}\nt.test(ttest_pass$BoxOffice, ttest_not_pass$BoxOffice)\n```\n\n## Conclusion\n\nThe representation of women in film stories stagnated from the 1930s to\nthe 1970s, but has gradually improved, especially since the 1970s.\\\nHowever, this is not true for all genres: the percentage of films that\npass the Bechdel test varies widely from the 20% range (Western) to the\n70% range (Romance), depending on the genre. Some genres (Horror,\nAdventure, Science Fiction, Fantasy) have consistently increased the\npercentage of films that pass the Bechdel test, while others (War,\nCrime, History, Western) have remained stagnant. The percentage of films\nthat pass the test is increasing constantly.\\\n\\\nIt turns out that whether or not a film passes the Bechdel test has\nlittle impact on its success (i.e., popularity and revenue). However,\nthe reviews on the imdb website are higher for films that do not pass\nthe Bechdel Test.\n\nThis analysis has so far shown how women's representation has (or has\nnot) improved, and which genres have been particularly well represented\nby women, but it has not explained why this has happened. I would like\nto conduct an analysis that can answer the question \"Why?\". For example,\nI would like to test the hypothesis that the increase in female\nrepresentation in fantasy and horror is due to the increase in female\naudiences.\\\nAlso, I would like to further investigate the relationship between\nfemale representation and film success (popularity and revenue). In\nparticular, I am interested in how the gender of the audience affects\ntheir evaluation of films in which women are represented and those in\nwhich they are not.\n\n## Reflection\n\nOne of the most difficult parts of this analysis was finding the right\ndata. Even though there are many movie database, the information was not\ncomplete or not clear enough to be used. Thus, I ended up using two\ndifferent movie databases and one Bechdel test database because one\nmovie database (The Movie Dataset) didn't have a clear definition of\nreview ratings and popularity.\n\nAnother difficulty that I faced is that I could not find a good dataset\nof the gender of directors/writers of movies. Even though I found\n\"credit\" dataset that included the name and the gender of people who\nwere involved in the movie production, the information on director was\nlimited and only a few thousand movies had director information.\nOriginally, I wanted to visualize the relationship between the gender of\nmovie directors and the female representation, however, I gave up doing\nthat for this project due to the lack of an appropriate dataset.\\\n\n## Contact\n\nThe dataset that I used for this analysis can be found on my GitHub\n(<https://github.com/Enagai-nagai/601_Fall_2022/tree/template/posts/_data>).\n\nI'm interested in analyzing and visualizing data related to the\nentertainment industry, behavior on digital platforms, and gender\nissues.\n\nIf you have any comments or questions, please contact me through Email.\n\n-   enagai ★ umass.edu (please replace ★ with \\@)\n\n-   nagainagai.e ★ gmail.com (please replace ★ with \\@)\n\n## Bibliography and References\n\nI used R and RStudio to realize this analysis.\n\nThe below is the source of data sets:\n\n-   Bechdel API: <https://bechdeltest.com/api/v1/doc>\n\n-   The Movie Dataset from Kaggle:\n    <https://www.kaggle.com/datasets/rounakbanik/the-movies-dataset>\n\n-   OMDb API: <https://www.omdbapi.com/>\n\nThe below is the source of information:\n\n-   Women and Hollywood. (2022, March 15) *Study: Women made up 34% of\n    speaking roles in 2021's top films, majority of those characters\n    were white*. . Retrieved December 13, 2022, from\n    [https://womenandhollywood.com/study-women-made-up-34-of-speaking-roles-in-2021s-top-films-majority-of-those-characters-were-white/#:\\~:text=In%202021's%20top%20films%2C%20females,and%2037%20percent%20in%202019.](https://womenandhollywood.com/study-women-made-up-34-of-speaking-roles-in-2021s-top-films-majority-of-those-characters-were-white/#:~:text=In%202021's%20top%20films%2C%20females,and%2037%20percent%20in%202019.)\n\n-   Lauzen, M. M. (2021). (rep.). *It's a Man's (Celluloid) World, Even\n    in a Pandemic Year: Portrayals of Female Characters in the Top U.S.\n    Films of 2021*. San Diego, California: San Diego State University\n    and The Center for the Study of Women in Television and Film.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":true,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Final_Project_ErikaNagai.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.37","execution":{"freeze":"auto"},"smooth-scroll":true,"page-layout":"full","mainfont":"Open Sans","linkcolor":"#881c1c","theme":{"light":["flatly","../styles.scss"],"dark":["darkly","../styles.scss"]},"comments":{"giscus":{"repo":"DACSS/601_Fall_2022","category":"Announcements"}},"toc-location":"right","search":true,"title":"Final Project Erika Nagai","author":"Erika Nagai","description":"Female representation in movie stories","date":"`r Sys.Date()`","categories":["movie","gender","bechdel test","female representation","Erika Nagai"],"editor":{"markdown":{"wrap":72}},"code-copy":true},"extensions":{"book":{"multiFile":true}}}}}